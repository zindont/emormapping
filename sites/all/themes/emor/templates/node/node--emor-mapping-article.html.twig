{#
/**
 * @file
 * Bartik's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
    'emor-article',
    'container',
  ]
%}
{{ attach_library('classy/node') }}
<div{{ attributes.addClass(classes) }}>
  <div class="row header">
    <div class="col-lg-7 title-box">
      <h2 class="index-title">{{ content.index_categories_name }}</h2>
      <h1 class="node-title">{{ label }}</h1>
      <p class="author-name"><i>by {{author.name}}</i></p>
    </div>
    <div class="col-lg-5 img-box">
      {% if content.thumbnail == '' %}
        <img src="{{theme_path}}/images/imgpsh_fullsize.jpg" alt="">
      {% else %}
        <img src="{{ content.thumbnail }}" alt="">
      {% endif %}
    </div>
    <div class="col-xs-12">
      <div class="abstract">
        <h2 class="text-uppercase"><strong>Abstract</strong></h2>
        <p>{{ content.field_short_description }}</p>
      </div>
    </div>
  </div>

  <div class="row content-details">
    <div class="col-lg-8 details">
      <div class="social-tab">
        <div class="row">
          <div class="col-xs-6 sharer">
            <div class="icon share">
             <i class="fa fa-share-alt"></i>
             SHARE
            </div>
            <div class="icon">
             <i class="fa fa-facebook"></i>
            </div> 
            <div class="icon">
             <i class="fa fa-twitter"></i>
            </div>
            <div class="icon">
             <i class="fa fa-google-plus"></i>
            </div>
            <div class="icon">
             <i class="fa fa-pinterest-p"></i>
            </div>
            <div class="icon">
             <i class="fa fa-print"></i>
            </div>
            <div class="icon">
             <i class="fa fa-envelope-o"></i>
            </div>              
          </div>
          <div class="col-xs-6 text-center notes-guide">
            <i class="fa fa-info"></i><p>EMOR NOTES GUIDE</p>
          </div>                                       
        </div>
      </div>
      <div class="content">
        {{ newContent.body | raw }}
      </div>
    </div>
    <div class="col-lg-4 content-tabs">
      <div class="content-table">
        <ul class="nav nav-tabs">
          <li><a data-toggle="tab" href="#table-of-content">TABLE OF CONTENT</a></li>
          <li class="active"><a data-toggle="tab" href="#emor-notes">EMOR NOTES</a></li>
        </ul>

        <div class="tab-content">
          <div id="table-of-content" class="tab-pane fade">
            {#{ node.field_table_of_content.value|raw }#}
            {% for item in newContent.dataTableOfContent %}
                <p><strong><a href="#{{ item.id }}">{{ item.head_content }}</a></strong></p>
            {% endfor %}            
          </div>
          <div id="emor-notes" class="tab-pane fade in active">
            {#{ node.field_emor_notes.value | raw }#}
            {% for key,item in newContent.dataEmorNotes %}
                <p id="emor-notes-{{item.id}}"><sup><b>{{key + 1}}</b></sup><b>{{ (item.note_label) ? item.note_label ~ ' - '}}</b>{{ item.note_content | raw}}</p>
            {% endfor %}               
          </div>
        </div>
      </div>

      <div class="content-tags">
        <div class="panel-group">
          <div class="panel panel-default">
            <div class="panel-heading">
                <a class="panel-title" data-toggle="collapse" aria-expanded="false" href="#collapse1">TAGS</a>
            </div>
            <div id="collapse1" class="panel-collapse collapse">
              <div class="panel-body">{{ content.field_tags }}</div>
            </div>
          </div>
        </div>      
      </div>

    </div>
  </div>
  <div class="row">
    <div class="col-lg-12">
      <div class="path-info clearfix">
        <div class="col-lg-8 path">
          
          <h2 class="text-uppercase"><strong>Mapped In</strong></h2>
          <div class="breadcrumb">

            {% for value in content.mapped_in|reverse %}
              <span>{{ value|capitalize }}</span><i class="fa fa-angle-double-right"></i>
            {% endfor %}
              <span>{{ content.index_categories_name|capitalize }}</span>
          </div> 

        </div>
        <div class="col-lg-4 info text-right">
          <h2 class="text-uppercase"><strong>Published</strong></h2>
          <i class="fa fa-calendar"></i> {{node.field_published_date.value|date('D, m/d/Y') }}
        </div>
        
      </div>
    </div>    
  </div>
</div>



<div class="author-text-box">
  <div class="container">
    <div class="row">
      <div class="col-lg-1 author-img">
        <img src="{{author.profile_photo}}" alt="">
      </div>
      <div class="col-lg-10 author-quote">
        <strong>{{ author.name }}</strong>
        <p>{{author.summary|raw}} ... <strong><a href="{{ path('entity.node.canonical', {'node': author.id}) }}">Readmore</a></strong></p>
      </div>      
    </div>
  </div>
</div>

<div class="author-foot-notes">
  <div class="container">
    <h2 class="text-uppercase"><strong>Authorâ€™s FOOTNOTES</strong></h2>
    <p>
      {{ content.field_author_footnote }}
    </p>
  </div>
</div>
